{"version":3,"sources":["../../src/models/Session.js"],"names":["initializeSession","phone_no","session","getUserSession","session_hash","crypto","randomBytes","toString","query","db","err","res","console","log","cb","Promise","resolve","reject","updateSessionNextAction","next_action","updateSessionCurrentAction","current_action","endSession"],"mappings":"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","sourcesContent":["\nimport crypto from 'crypto';\nimport db from '../db';\n\nexport const initializeSession = async (phone_no) => {\n\n    var session = await getUserSession(phone_no);\n\n    if(!session) {\n        let session_hash = crypto.randomBytes(20).toString('hex');\n\n        let query = \"INSERT into `sessions` (phone_no, session_hash) VALUES ('\" + phone_no + \"', '\" + session_hash + \"')\";\n    \n        db.query(query, (err, res) => {\n            console.log({err, res})\n            // if(err) res.status(500).send(err);\n    \n            // res.status(200);\n    \n            if(err) {\n                console.log(err);\n                return false;\n            };\n    \n            return true;        \n        })    \n    }\n\n}\n\n\nexport const getUserSession = (phone_no, cb) => {\n\n\n    let query = \"SELECT * FROM `sessions` WHERE `phone_no` = '\" + phone_no + \"' AND `status` = 1 LIMIT 1\";\n    return new Promise(function(resolve, reject){\n        db.query(query, (err, res) => {\n        // console.log({err, res})\n\n                if(err) {\n                    console.log(err);\n                    reject(err)\n                    // throw err;\n                };\n\n                // console.log(res[0].next_action, 'status');\n                resolve(res[0]);\n                // return res[0];      \n            });\n    });\n}\n\n\n\n\nexport const updateSessionNextAction = (phone_no, next_action) => {\n\n    let query = \"UPDATE `sessions` SET `next_action` = '\"+ next_action+\"', `updated_at` = NOW() WHERE `phone_no` = '\" + phone_no + \"' and `status` = 1 \";\n\n    db.query(query, (err, res) => {\n        // console.log({err, res})\n        if(err) {\n            console.log(err);\n            return false;\n        };\n\n        return true;\n    })    \n}\n\nexport const updateSessionCurrentAction = (phone_no, current_action) => {\n\n    let query = \"UPDATE `sessions` SET `current_action` = '\"+ current_action+\"', `updated_at` = NOW() WHERE `phone_no` = '\" + phone_no + \"' and `status` = 1 \";\n\n    db.query(query, (err, res) => {\n        // console.log({err, res})\n        if(err) {\n            console.log(err);\n            return false;\n        };\n\n        return true;\n    })    \n}\n\n\nexport const endSession = (phone_no, session_hash) => {\n\n    let query = \"UPDATE `sessions` SET `status` = 0, `updated_at` = NOW() WHERE `phone_no` = '\" + phone_no + \"' and `session_hash` = '\"+ session_hash +\"' and `status` = 1 \";\n\n    db.query(query, (err, res) => {\n        // console.log({err, res})\n        if(err) {\n            console.log(err);\n            return false;\n        };\n\n        return true;\n    })    \n}"],"file":"Session.js"}